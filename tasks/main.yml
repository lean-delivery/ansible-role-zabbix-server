---
# tasks file for ansible-role-zabbix-server

- name: For Red Hat OS family
  block:
    - debug:                     # Test part
        msg: "{{ hostvars[inventory_hostname].ansible_distribution }}"
    - debug:
        msg: "{{ hostvars[inventory_hostname].ansible_distribution_major_version }}"
    - debug:
        msg: "{{ hostvars[inventory_hostname].ansible_distribution_version }}"

    - name: Installing Zabbix repository
      become: true
      yum:
        name: '{{ z_repo }}'
        state: present
      register: task_result_1
      retries: 3
      delay: 2
      until: task_result_1 is success

    - name: Installing the list of packages
      become: true
      yum:
        name:
          - zabbix-server-mysql  # This is a server package
          - zabbix-web-mysql
          - zabbix-agent
        state: present
      register: task_result_2
      retries: 3
      delay: 2
      until: task_result_2 is success
  when: ansible_os_family == "RedHat"

- name: For Debian OS family
  block:
    - debug:                     # Test part
        msg: "{{ hostvars[inventory_hostname].ansible_distribution }}"
    - debug:
        msg: "{{ hostvars[inventory_hostname].ansible_distribution_major_version }}"
    - debug:
        msg: "{{ hostvars[inventory_hostname].ansible_distribution_version }}"
                                 # Test part
    - name: Print Debian repo
      debug:
        var: z_repo_deb

    - name: Installing Zabbix repository
      become: true
      apt:
        deb: '{{ z_repo_deb }}'
      register: task_result_3
      retries: 3
      delay: 2
      until: task_result_3 is success

    - name: Renewing packages list ( "sudo apt update" )
      become: true
      apt:
        update_cache: true
      register: task_result_4
      retries: 3
      delay: 2
      until: task_result_4 is success

    - name: Installing the list of packages
      become: true
      apt:
        name:
          - zabbix-server-mysql  # This is the server package
          - zabbix-frontend-php
          - zabbix-agent
        state: present
      register: task_result_5
      retries: 3
      delay: 2
      until: task_result_5 is success
  when: ansible_os_family == "Debian"

- name: Replacing the commented entry with a valid parameter ( DBHost )
  become: true
  replace:
    dest: '{{ z_config }}'
    regexp: '^# DBHost=localhost$'
    replace: 'DBHost={{ z_dblocation }}'

#- name: Putting DB name into my.cnf
#  become: true
#  ini_file:
#    path: /etc/my.cnf
#    section: client
#    option: user
#    value: zabbix
#    backup: yes

#- name: Putting DB name into my.cnf
#  become: true
#  ini_file:
#    path: /etc/my.cnf
#    section: client
#    option: password
#    value: 1
#    backup: yes

- name: Replacing the commented entry with a valid parameter ( DBPassword )
  become: true
  replace:
    dest: '{{ z_config }}'
    regexp: '^# DBPassword=$'
    replace: 'DBPassword={{ z_dbpass }}'

# - name: Importing DB scheme
#   shell: 'zcat /usr/share/doc/zabbix-server-mysql*/create.sql.gz | mysql -uzabbix -p1'
#   args:
#     executable: /bin/bash

#- name: Counting the quantity of tables
#  shell: |
#    set -o pipefail
#    mysqlshow --user=root --password=1 zabbix | grep -v "Database: zabbix" | grep -v Tables | grep -v +-- | wc -l
#  register: tables_quantity
#  changed_when: false                                                     # checking the exit code of the command
## ignore_errors: true

# - name: Counting the quantity of tables
#   shell: |
#     set -o pipefail
#     mysqlshow --user=root --password=1 zabbix | wc -l
#   register: tables_quantity
#   changed_when: false


# - name: Print
#   debug:
#     var: tables_quantity.stdout

- name: For Red Hat OS family
  block:

                                 # Test part
    - name: Checking catalog existence
#     shell: if [ -d /usr/share/doc/zabbix-server-mysql-4.2.1 ]; then echo 'The directory exists'; fi
      shell: if [ -d /usr/share/doc/zabbix-server-mysql-{{ z_version }} ]; then echo 'The directory exists'; fi
      register: existence
      changed_when: false

                                 # Test part
    - name: Print
      debug:
        var: existence.stdout

    - name: Importing DB scheme
      block:
        - name: Importing
          mysql_db:
            name: zabbix
            login_user: zabbix
            login_password: 1
            state: import
#           target: /usr/share/doc/zabbix-server-mysql-4.2.1/create.sql.gz
            target: /usr/share/doc/zabbix-server-mysql-{{ z_version }}/create.sql.gz
      rescue:
        - name: The schema exists
          debug:
            msg: " THE SCHEMA EXISTS ! "

  when: ansible_os_family == "RedHat"

- name: For Debian OS family
  block:

                                 # Test part
    - name: Checking catalog existence
      shell: if [ -d /usr/share/doc/zabbix-server-mysql ]; then echo 'The directory exists'; fi
      register: existence
      changed_when: false

                                 # Test part
    - name: Print
      debug:
        var: existence.stdout


    - name: Importing DB scheme
      block:
        - name: Importing
          mysql_db:
            name: zabbix
            login_user: zabbix
            login_password: 1
            state: import
            target: /usr/share/doc/zabbix-server-mysql/create.sql.gz
      rescue:
        - name: The schema exists
          debug:
            msg: " THE SCHEMA EXISTS ! "

  when: ansible_os_family == "Debian"

- name: Starting and enabling zabbix-server
  become: true
  service:
    name: zabbix-server
    state: started
    enabled: true

- name: Starting and enabling zabbix-agent
  become: true
  service:
    name: zabbix-agent
    state: started
    enabled: true

- name: For Red Hat OS family
  block:

    - name: Adding a timezone to the web config of Zabbix
      become: true
      lineinfile:
        path: '{{ z_webconfig }}'
        insertafter: '# php_value date.timezone'
        line: '        php_value date.timezone {{ z_timezone }}'

    - name: Starting and enabling httpd
      become: true
      service:
        name: httpd
        state: started
        enabled: true

  when: ansible_os_family == "RedHat"

- name: For Debian OS family
  block:

    - name: Adding a timezone to Zabbix web config
      become: true
      lineinfile:
        path: '{{ z_webconfig_deb }}'
#       regexp: '^# php_value date.timezone '                                # There are 2 such strings in the file in Debian
        insertafter: '# php_value date.timezone'
        line: '        php_value date.timezone {{ z_timezone }}'

    - name: Check that you can connect (GET) to a page and it returns a status 200
      uri:
        url: http://{{ z_ipaddr }}/zabbix
        return_content: true
      register: web_result
#     notify: Reload Apache
    
#   - name: Print 2
#     debug: web_result.stderr
    - debug:
        var: web_result.stdout


#    - name: Starting and enabling apache2
#      become: true
#      service:
#        name: apache2
#        state: started
#        enabled: true

  when: ansible_os_family == "Debian"
